<launch>
    <!-- Launches the AR.Drone driver -->
    <node name="ardrone_driver" pkg="ardrone_autonomy" type="ardrone_driver" output="screen" clear_params="true">
        <param name="outdoor" value="0" />              <!-- If we are flying outdoors, will select more aggressive default settings -->
        <param name="flight_without_shell" value="0" /> <!-- Changes internal controller gains if we are flying without the propeller guard -->
        
        <param name="altitude_max" value="3000" />      <!-- in millimeters = 3 meters = 9' -->
        <param name="altitude_min" value="50" />        <!-- in millimeters = 5cm = 2" -->
        <param name="euler_angle_max" value="0.1" />    <!-- maximum allowable body angle in radians = 5 degrees -->
        <param name="control_vz_max" value="200" />     <!-- maximum z velocity in mm/sec = 0.2m/sec -->
        <param name="control_yaw" value="0.7" />        <!-- maximum rotation rate in radians/sec = 40 degrees per second (1/9 rev/sec) -->
        
        <param name="video_codec" value="130" />        <!-- MP4_360P_H264_720P_CODEC : Live stream with MPEG4.2 soft encoder. Record stream with H264 hardware encoder in 720p mode. -->
        <!-- The following codec is ideal, but leads to a crash for some reason:
        <param name="video_codec" value="131" />-->     <!-- H264_720P_CODEC : Live stream with H264 hardware encoder configured in 720p mode. No record stream. -->
<!--         <param name="bitate" value="8000" /> -->
<!--         <param name="max_bitate" value="8000" /> -->
        <param name="video_channel" value="0" />         <!-- start with front cam -->
        <param name="video_on_usb" value="0" />         <!-- don't start by recording -->
    </node>

    <node name="joy_node" pkg="joy" type="joy_node" output="screen" clear_params="true">
        <param name="dev" type="str" value="/dev/input/js0"/>
    </node>
    
    <!-- Launches the joystick controller -->
    <node name="joystick_controller_takevideo" pkg="ardrone_tutorials" type="joystick_controller_takevideo.py" output="screen" required="true">
        <!-- Configures the joystick button mapping -->
        <param name="ButtonEmergency"	value="16" />   <!-- PS3 - PS_LOGO -->
        <param name="ButtonLand"		value="0" />    <!-- PS3 - SELECT  -->
        <param name="ButtonTakeoff"     value="3" />    <!-- PS3 - START   -->
        <param name="ButtonTakeVideo"	value="14" />   <!-- PS3 - X       -->  <!-- Used to start/resume and stop/pause the video (PressEvent is trigger) -->

        <!-- Configures the joystick axis mapping -->
        <param name="AxisRoll"          value="2" />    <!-- PS3 - RightStick Left/Right  -->
        <param name="AxisPitch"         value="3" />    <!-- PS3 - RightStick Down/Up     -->
        <param name="AxisYaw"           value="0" />    <!-- PS3 - LeftStick  Left/Right  -->
        <param name="AxisZ"             value="1" />    <!-- PS3 - LeftStick  Down/Up     -->

        <!-- Configures the joystick mapping -->
        <param name="ScaleRoll"         value="1" />
        <param name="ScalePitch"        value="1" />
        <param name="ScaleYaw"          value="1" />
        <param name="ScaleZ"            value="1" />

        <!-- Set the output image-sequence directory -->
        <param name="image_folder"    value="./ardrone_flight_imgseq/" />   <!-- Apart from images, another file "timestamps.txt" will be saved, containing corresponding timestamps separated by newlines. --> 
        
        <!-- Take Video configuration -->
        <param name="takevideo_max_memory"    value="1000e6" />    <!-- This amount of memory is allocated at the beginning, LEDs will blink (non-ORANGE) when ready. -->
        <!--
        At the moment you start the recording, the LEDs will also blink (non-ORANGE).
        When you pause the recording, the LEDs will blink (ORANGE) as well.
        And finally, when the given maximum memory has been reached recording, again the LEDs will blink (ORANGE).
        Upon closing the application, the image sequence will be written to the disk, this will require less space than "takevideo_max_memory".
        -->
    </node>
</launch>
